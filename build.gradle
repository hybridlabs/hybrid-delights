plugins {
	id "fabric-loom" version "1.9-SNAPSHOT"
	id "org.jetbrains.kotlin.jvm"
	id "maven-publish"
}

version = mod_version
group = maven_group

base {
	archivesName = mod_id
}

repositories {
	maven {
		name = "Modrinth"
		url  = "https://api.modrinth.com/maven"
	}

	maven {
		name = "Greenhouse"
		url  = "https://repo.greenhouse.house/releases/"
	}

	maven {
		name = "devOS"
		url  = "https://mvn.devos.one/releases/"
	}

	maven {
		name = "jamieswhiteshirt"
		url  = "https://maven.jamieswhiteshirt.com/libs-release/"
	}

	maven {
		name = "Jitpack"
		url  = "https://jitpack.io/"
	}

	maven {
		name = "GeckoLib"
		url  = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
	}
}

loom {
	splitEnvironmentSourceSets()

	mods {
		mod_id {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:$minecraft_version"
	mappings "net.fabricmc:yarn:$minecraft_version+build.$yarn_build:v2"

	modImplementation "net.fabricmc:fabric-loader:$loader_version"

	modImplementation "net.fabricmc.fabric-api:fabric-api:$fabric_version"
	modImplementation "net.fabricmc:fabric-language-kotlin:$fabric_kotlin_version+kotlin.$kotlin_version"

	modImplementation "maven.modrinth:hybrid-aquatic:$aquatic_version"
	modImplementation "software.bernie.geckolib:geckolib-fabric-$minecraft_version:$geckolib_version"
	modImplementation "com.eliotlash.mclib:mclib:20"

	modImplementation "vectorwing:FarmersDelight:$farmers_delight_version+refabricated"
	modImplementation "com.electronwill.night-config:toml:$nightconfig_version"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = 21
	}
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${base.archivesName.get()}"}
	}
}
